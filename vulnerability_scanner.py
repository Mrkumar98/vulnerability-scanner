import argparse
import requests
from bs4 import BeautifulSoup
import nmap

def scan_ports(target):
    nm = nmap.PortScanner()
    nm.scan(target, '1-1024')
    for host in nm.all_hosts():
        print(f'Scanning host: {host}')
        for proto in nm[host].all_protocols():
            lport = nm[host][proto].keys()
            for port in lport:
                print(f'Port: {port}\tState: {nm[host][proto][port]["state"]}')

def check_outdated_software(target):
    response = requests.get(target)
    soup = BeautifulSoup(response.text, 'html.parser')
    meta = soup.find('meta', {'name': 'generator'})
    if meta:
        version = meta.get('content')
        print(f'Found software version: {version}')
        # Compare version with known outdated versions (you can maintain a list)
        # ...

def detect_misconfigurations(target):
    response = requests.get(target)
    headers = response.headers
    if 'X-Frame-Options' not in headers:
        print('Missing X-Frame-Options header')
    if 'Content-Security-Policy' not in headers:
        print('Missing Content-Security-Policy header')
    # Add more checks as needed

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Basic Vulnerability Scanner')
    parser.add_argument('target', type=str, help='Target URL or IP address')
    args = parser.parse_args()

    target = args.target
    print(f'Scanning target: {target}')
    scan_ports(target)
    check_outdated_software(target)
    detect_misconfigurations(target)
